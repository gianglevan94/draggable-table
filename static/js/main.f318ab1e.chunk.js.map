{"version":3,"sources":["components/TableBody.js","components/TableHead.js","components/Table.js","components/TextBlink.js","App.js","serviceWorker.js","index.js"],"names":["TableBody","getStyle","key","widths","_this","props","width","renderColumn","item","col","colIndex","rowIndex","render","react_default","a","createElement","className","style","onDragEnd","result","reorder","source","index","destination","_this2","this","_this$props","data","schema","draggable","react_beautiful_dnd_esm","droppableId","provided","ref","innerRef","map","draggableId","id","Object","assign","draggableProps","dragHandleProps","PureComponent","defaultProps","MIN_WIDTH","TableHead","state","sortState","columnRefs","calcWidths","setTimeout","setColumnWidth","keys","reduce","objectSpread","defineProperty","getBoundingClientRect","onDragStart","e","dragColumnIndex","onDragEnter","column","targetRect","middle","right","left","hoverClientX","clientX","initStyle","position","cursor","onResizeStart","preventDefault","stopPropagation","isResize","onResize","_this$props2","Math","max","onStopResize","changeSortState","_sortStateMap","onSort","sortStateMap","undefined","SORT_TYPES","ASC","DESC","setState","window","addEventListener","removeEventListener","_this$props3","resizeable","onClick","el","onDragOver","title","onMouseDown","height","display","top","list","startIndex","endIndex","Array","from","_result$splice","splice","removed","slicedToArray","Table","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","reorderColumn","targetIndex","reorderRow","setWidth","hideColumn","hideColumns","concat","getSchema","showColumn","newHideColumns","filter","onCheckBoxChange","target","checked","name","includes","sortData","type","orderBy","nextProps","_this$state","columnDraggable","rowDraggable","components_TableHead","components_TableBody","onChange","htmlFor","TextBlink","removeBlinkClass","div","classList","remove","prevProps","prevState","snapshot","children","add","blinkTimeout","clearTimeout","last","change","percentChange","volume","value","buyVolume","sellVolume","foreignNet","putThoughVol","putThoughValue","toConsumableArray","it","text","Fragment","components_TextBlink","App","randomValue","floor","random","setInterval","components_Table","Component","Boolean","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f318ab1e.chunk.js","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\n\nclass TableBody extends PureComponent {\n  getStyle = (key) => {\n    const { widths } = this.props\n    if (!widths[key]) {\n      return {}\n    }\n\n    return {\n      width: widths[key]\n    }\n  }\n\n  renderColumn = (item, col, colIndex, rowIndex) => {\n    if (col.render && typeof col.render === 'function') {\n      return (\n        <td className={col.className} style={this.getStyle(col.key)} key={colIndex}>\n          {col.render(item[col.key], item, rowIndex)}\n        </td>\n      )\n    }\n\n    return (\n      <td className={col.className} style={this.getStyle(col.key)} key={colIndex}>\n        {item[col.key]}\n      </td>\n    )\n  }\n\n  onDragEnd = (result) => {\n    const { reorder } = this.props\n    reorder(result.source.index, result.destination.index)\n  }\n\n  render() {\n    const { data, schema, draggable } = this.props\n    if (!draggable) {\n      return (\n        <tbody>\n          {data.map(item =>\n            <tr>\n            {schema.map((col, colIndex) => this.renderColumn(item, col, colIndex))}\n            </tr>\n          )}\n        </tbody>\n      )\n    }\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <Droppable droppableId=\"droppableRow\">\n          {(provided) => (\n            <tbody ref={provided.innerRef}>\n            {data.map((item, rowIndex) => (\n              <Draggable key={rowIndex} draggableId={item.id} index={rowIndex}>\n                {(provided) => (\n                  <tr\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    key={item.id}\n                  >\n                    {schema.map((col, colIndex) => this.renderColumn(item, col, colIndex, rowIndex))}\n                  </tr>\n                )}\n              </Draggable>\n\n            ))}\n            </tbody>\n          )}\n        </Droppable>\n\n      </DragDropContext>\n    )\n  }\n}\n\nTableBody.propTypes = {\n  data: PropTypes.array.isRequired,\n  schema: PropTypes.array.isRequired,\n  reorder: PropTypes.func,\n  widths: PropTypes.object,\n  draggable: PropTypes.bool.isRequired,\n}\n\nTableBody.defaultProps = {\n  reorder: () => {},\n  widths: {},\n}\n\nexport default TableBody\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { SORT_TYPES } from './Table'\n\nconst MIN_WIDTH = 100\n\nclass TableHead extends PureComponent {\n  state = {\n    sortState: {}\n  }\n\n  columnRefs = {}\n\n  componentDidMount() {\n    this.calcWidths()\n    window.addEventListener('mousemove', this.onResize)\n    window.addEventListener('mouseup', this.onStopResize)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('mousemove', this.onResize)\n    window.removeEventListener('mouseup', this.onStopResize)\n  }\n\n  calcWidths = () => {\n    setTimeout(() => {\n      const { setColumnWidth } = this.props\n      const widthData = Object.keys(this.columnRefs).reduce((result, key) => {\n        return {\n          ...result,\n          [key]: this.columnRefs[key].getBoundingClientRect().width\n        }\n      }, {})\n      setColumnWidth(widthData)\n    }, 0)\n  }\n\n  onDragStart = (index) => (e) => {\n    this.dragColumnIndex = index\n  }\n\n  onDragEnter = (index) => (e) => {\n    const { reorder, schema } = this.props\n    const column = schema[index]\n    if (index === this.dragColumnIndex) {\n      return\n    }\n    const targetRect = this.columnRefs[column.key].getBoundingClientRect()\n    const middle = (targetRect.right - targetRect.left) / 2\n    const hoverClientX = e.clientX - targetRect.left\n    if (this.dragColumnIndex < index && hoverClientX < middle) {\n      return\n    }\n\n    if (this.dragColumnIndex > index && hoverClientX > middle) {\n      return\n    }\n    reorder(this.dragColumnIndex, index)\n    this.dragColumnIndex = index\n  }\n\n  getStyle = (key) => {\n    const initStyle = {\n      position: 'relative',\n      cursor: 'default',\n    }\n    const { widths } = this.props\n    if (!widths[key]) {\n      return initStyle\n    }\n\n    return { ...initStyle, width: widths[key] }\n  }\n\n  onResizeStart = (key) => (e) => {\n    e.preventDefault()\n    e.stopPropagation()\n    this.isResize = true\n    this.key = key\n    this.clientX = e.clientX\n  }\n\n  onResize = (e) => {\n    if (!this.isResize || !this.key) {\n      return\n    }\n    const { widths, setColumnWidth } = this.props\n    setColumnWidth({\n      ...widths,\n      [this.key]: Math.max(widths[this.key] + (e.clientX - this.clientX), MIN_WIDTH),\n    })\n    this.clientX = e.clientX\n  }\n\n  onStopResize = (e) => {\n    this.isResize = false\n    this.key = null\n  }\n\n  changeSortState = (key) => (e) => {\n    e.preventDefault()\n    const { sortState } = this.state\n    const { onSort } = this.props\n    const sortStateMap = {\n      [undefined]: SORT_TYPES.ASC,\n      [SORT_TYPES.ASC]: SORT_TYPES.DESC,\n      [SORT_TYPES.DESC]: SORT_TYPES.ASC,\n    }\n    this.setState({\n      sortState: {\n        [key]: sortStateMap[sortState[key]],\n      }\n    })\n    onSort(key, sortStateMap[sortState[key]])\n  }\n\n  render() {\n    const { schema, draggable, resizeable } = this.props\n    return (\n      <thead>\n      <tr>\n        {schema.map((col, colIndex) => (\n          <th\n            onClick={this.changeSortState(col.key)}\n            key={colIndex}\n            ref={el => this.columnRefs[col.key] = el}\n            onDragStart={this.onDragStart(colIndex)}\n            onDragOver={this.onDragEnter(colIndex)}\n            draggable={draggable}\n            style={this.getStyle(col.key)}\n          >\n            {col.title}\n            {resizeable && (\n              <div\n                onMouseDown={this.onResizeStart(col.key)}\n                style={{\n                  height: '100%',\n                  display: 'inline-block',\n                  width: 8,\n                  cursor: 'col-resize',\n                  position: 'absolute',\n                  top: 0,\n                  right: 0,\n                }}\n              />\n            )}\n          </th>\n        ))}\n      </tr>\n      </thead>\n    )\n  }\n}\n\nTableHead.propTypes = {\n  schema: PropTypes.array.isRequired,\n  reorder: PropTypes.func,\n  setColumnWidth: PropTypes.func,\n  widths: PropTypes.object,\n  draggable: PropTypes.bool.isRequired,\n  resizeable: PropTypes.bool,\n  onSort: PropTypes.func,\n}\n\nTableHead.defaultProps = {\n  reorder: () => {},\n  setColumnWidth: () => {},\n  widths: {},\n  resizeable: false,\n  onSort: () => {},\n}\n\nexport default TableHead\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport TableBody from './TableBody'\nimport TableHead from './TableHead'\nimport orderBy from 'lodash/orderBy'\n\nexport const SORT_TYPES = {\n  ASC: 'asc',\n  DESC: 'desc',\n}\n\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list)\n  const [removed] = result.splice(startIndex, 1)\n  result.splice(endIndex, 0, removed)\n\n  return result\n}\n\nclass Table extends PureComponent {\n  constructor(props) {\n    super(props)\n    const { data, hideColumns } = this.props\n    this.state = {\n      data,\n      hideColumns,\n      schema: this.getSchema(hideColumns),\n      widths: {},\n      sortState: {},\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { data, hideColumns } = this.props\n    if (data !== nextProps.data) {\n      this.setState({\n        data: nextProps.data,\n      })\n    }\n    if (hideColumns !== nextProps.hideColumns) {\n      this.setState({\n        hideColumns: nextProps.hideColumns,\n      })\n    }\n  }\n\n  reorderColumn = (startIndex, targetIndex) => {\n    const { schema } = this.state\n    this.setState({\n      schema: reorder(schema, startIndex, targetIndex),\n    })\n  }\n\n  reorderRow = (startIndex, targetIndex) => {\n    const { data } = this.state\n    this.setState({\n      data: reorder(data, startIndex, targetIndex),\n    })\n  }\n\n  setWidth = widths => {\n    this.setState({\n      widths,\n    })\n  }\n\n  hideColumn = (key) => {\n    const { hideColumns } = this.state\n\n    this.setState({\n      hideColumns: hideColumns.concat(key),\n      schema: this.getSchema(hideColumns.concat(key)),\n    })\n  }\n\n  showColumn = (key) => {\n    const { hideColumns } = this.state\n    const newHideColumns = hideColumns.filter(col => col !== key)\n    this.setState({\n      hideColumns: newHideColumns,\n      schema: this.getSchema(newHideColumns),\n    })\n  }\n\n  onCheckBoxChange = (e) => {\n    if (e.target.checked) {\n      this.showColumn(e.target.name)\n      return\n    }\n    this.hideColumn(e.target.name)\n  }\n\n  getSchema = hideColumns => {\n    const { schema } = this.props\n\n    return schema.filter(col => !hideColumns.includes(col.key))\n  }\n\n  sortData = (key, type) => {\n    const { data } = this.state\n    this.setState({\n      data: orderBy(data, [key], [type])\n    })\n  }\n\n  render() {\n    const { data, widths, hideColumns, schema } = this.state\n    const { columnDraggable, rowDraggable, resizeable } = this.props\n    return (\n      <div>\n        <table className=\"scroll-table border-table\">\n          <TableHead\n            draggable={columnDraggable}\n            setColumnWidth={this.setWidth}\n            widths={widths}\n            schema={schema}\n            reorder={this.reorderColumn}\n            resizeable={resizeable}\n            onSort={this.sortData}\n          />\n          <TableBody\n            widths={widths}\n            draggable={rowDraggable}\n            reorder={this.reorderRow}\n            schema={schema}\n            data={data}\n          />\n        </table>\n\n        <div className=\"d-flex mt-3\">\n          {this.props.schema.map((col) => (\n            <div key={col.key} className=\"custom-control custom-checkbox mr-3\">\n              <input\n                checked={!hideColumns.includes(col.key)}\n                type=\"checkbox\"\n                name={col.key}\n                className=\"custom-control-input\"\n                id={`customCheck1_${col.key}`}\n                onChange={this.onCheckBoxChange}\n              />\n              <label className=\"custom-control-label\" htmlFor={`customCheck1_${col.key}`}>\n                {col.title}\n              </label>\n            </div>\n          ))}\n        </div>\n      </div>\n    )\n  }\n}\n\nTable.propTypes = {\n  data: PropTypes.array.isRequired,\n  schema: PropTypes.array.isRequired,\n  columnDraggable: PropTypes.bool,\n  rowDraggable: PropTypes.bool,\n  resizeable: PropTypes.bool,\n  hideColumns: PropTypes.array,\n}\n\nTable.defaultProps = {\n  data: [],\n  schema: [],\n  hideColumns: [],\n  columnDraggable: false,\n  rowDraggable: false,\n  resizeable: false,\n}\n\nexport default Table\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nclass TextBlink extends PureComponent {\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const { children } = this.props\n    if (children !== prevProps.children) {\n      this.div.classList.add('blink')\n      this.blinkTimeout = setTimeout(this.removeBlinkClass, 1000)\n    }\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.blinkTimeout)\n  }\n\n  removeBlinkClass = () => {\n    this.div.classList.remove('blink')\n  }\n\n  render() {\n    const { children } = this.props\n    return (\n      <div ref={el => this.div = el} style={{ display: 'inline-block' }}>\n        {children}\n      </div>\n    )\n  }\n}\n\nTextBlink.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default TextBlink\n","import React, { Component } from 'react'\nimport Table from './components/Table'\nimport './App.scss'\n\nimport TextBlink from './components/TextBlink'\n\nconst item = {\n  index: 'VN-Index',\n  last: 'Sunny Garton',\n  change: '(288) 1417941',\n  percentChange: 'GMC',\n  volume: 'Savana 2500',\n  value: 'Yellow',\n  buyVolume: '$99799.94',\n  sellVolume: '2016-03-23',\n  foreignNet: 5,\n  putThoughVol: 2,\n  putThoughValue: 2,\n}\n\nconst data = [...Array(10)].map((it, index) => ({ id: index + 1, ...item }))\n\nconst schema = [\n  {\n    key: 'id',\n    title: 'ID',\n  },\n  {\n    key: 'index',\n    title: 'INDEX',\n    render: text => <><i className=\"icon-graph fs-10\" />{text}</>\n  },\n  {\n    key: 'last',\n    title: 'LAST',\n    render: (text, item, index) => (\n      <div className={index % 2 === 0 ? 'text-s-color-5' : 'text-s-color-3'}>{text}</div>\n    ),\n  },\n  {\n    key: 'change',\n    title: 'CHANGE',\n  },\n  {\n    key: 'percentChange',\n    title: '% CHANGE',\n  },\n  {\n    key: 'volume',\n    title: 'VOLUME',\n  },\n  {\n    key: 'value',\n    title: 'VALUE',\n  },\n  {\n    key: 'buyVolume',\n    title: 'FR. BUY VOL',\n  },\n  {\n    key: 'sellVolume',\n    title: 'FR. SELL VOL',\n  },\n  {\n    key: 'foreignNet',\n    title: 'FOREIGN NET',\n    render: (text) => <TextBlink>{text}</TextBlink>\n  },\n  {\n    key: 'putThoughVol',\n    title: 'PUT THROUGH VOL',\n  },\n  {\n    key: 'putThoughValue',\n    title: 'PUT THROUGH VALUE',\n  },\n]\n\nclass App extends Component {\n  state = {\n    data,\n  }\n\n  componentDidMount() {\n    setInterval(this.randomValue, 2000)\n  }\n\n  randomValue = () => {\n    this.setState({\n      data: data.map(item => ({\n        ...item,\n        foreignNet: Math.floor(Math.random() * 100)\n      }))\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Table\n          data={this.state.data}\n          schema={schema}\n          resizeable={true}\n          columnDraggable={true}\n          rowDraggable={true}\n          hideColumns={['change']}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}